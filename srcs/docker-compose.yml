# version: "3.5"

# VOLUMES: defines storage location that Docker manages
# maintains data persistance (even if container restarts)
volumes:
  mariadb_data: # database for wordpress
  wordpress_data: # actual wordpress files

# NETWORKS: defines virtual networks that connect containers
# each container is then added to this network in order to link them up
networks: 
  inception: 

# SERVICES : defines each containerised application (or microservice)
# specifying its config, dependencies, volumes, network connections and env variables
services:
  mariadb:
    # image: mariadb
    container_name: mariadb
    build: ./requirements/mariadb/.
    volumes: 
      - ../volumes/mariadb_data:/var/lib/mysql
    env_file:
      - .env
    environment: 
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks: 
      - inception
    restart: on-failure
    
  nginx:
    container_name: nginx
    build: ./requirements/nginx/.
    ports:
      - "80:80" #http Port
      - "443:443" # https Port
    depends_on:
      - wordpress
      # - mariadb
    volumes: # defines directories that persist outside of container
      - ./requirements/nginx/conf/nginx.conf:/etc/nginx/nginx.conf  # NGINX config (bind mount)
      - ../volumes/wordpress_data:/var/www/html
    networks:
      - inception
    restart: always
    
  wordpress:
    # image: wordpress:6.6.2-fpm
    container_name: wordpress
    depends_on:
      - mariadb
    build: ./requirements/wordpress/.
    volumes:
      - ../volumes/wordpress_data:/var/www/html
    env_file:
      - .env
    # environment:
      # WORDPRESS_DB_HOST: mariadb
      # WORDPRESS_DB_USER: gsims
      # WORDPRESS_DB_PASSWORD: pass
      # WORDPRESS_DB_NAME: wordpress
    networks: 
      - inception
    restart: always
